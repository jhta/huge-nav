{"version":3,"sources":["webpack:///render.js","webpack:///webpack/bootstrap 4aa7bc1efd53339a93b1?e05f*","webpack:///./src/js/render.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","createList","_ref","items","$list","document","querySelector","$items","map","dataItem","i","createItem","forEach","$item","appendChild","data","createElement","length","getSecondaryItem","getPrimaryItem","setAttribute","createLink","$label","createLabel","$subList","createSubList","$checkbox","createCheckbox","stringCheckbox","createFromString","elementString","$div","innerHTML","firstChild","_ref2","label","url","$link","textContent","stringChevron","$subItems","item","createSubItem","$subItem","render","request","Request","fetch","then","response","json","11","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","Array","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","text","decode","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","e","viewClasses","obj","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","redirectStatuses","redirect","RangeError","location","init","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"render.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(11);\n\t\n\t/**\n\t * Render item list in DOM element #list\n\t * @param  {Object} data json data\n\t */\n\tfunction createList(_ref) {\n\t  var items = _ref.items;\n\t\n\t  var $list = document.querySelector('#list');\n\t  if (items) {\n\t    var $items = items.map(function (dataItem, i) {\n\t      return createItem(dataItem, i);\n\t    });\n\t    $items.forEach(function ($item) {\n\t      if ($item) {\n\t        $list.appendChild($item);\n\t      }\n\t    });\n\t  }\n\t  return;\n\t}\n\t\n\t/**\n\t * Create LI DOM element based in data information\n\t * @param  {Object} data item data\n\t * @param  {Number} i    iterator\n\t * @return {Node}      DOM li element\n\t */\n\tfunction createItem(data, i) {\n\t  var $item = document.createElement('li');\n\t  if (!(data.items && data.items.length > 0)) {\n\t    return getPrimaryItem($item, data);\n\t  }\n\t  return getSecondaryItem($item, data, i);\n\t}\n\t\n\t/**\n\t * Render item without subitems\n\t * @param  {Node} $item DOM li item without attributes\n\t * @param  {Object} data  item data\n\t * @return {Node}       DOM LI with attributes for primary navigation\n\t */\n\tfunction getPrimaryItem($item, data) {\n\t  $item.setAttribute('class', 'Nav-item is-primary');\n\t  $item.appendChild(createLink(data));\n\t  return $item;\n\t}\n\t\n\t/**\n\t * Render secondary item\n\t * @param  {Node} $item DOM li item without attributes\n\t * @param  {Object} data  item data\n\t * @param  {Number} i     iterator\n\t * @return {Node}       DOM LI with label, cehckbox and list\n\t */\n\tfunction getSecondaryItem($item, data, i) {\n\t  var $label = createLabel(data, i);\n\t  var $subList = createSubList(data.items);\n\t  var $checkbox = createCheckbox(i);\n\t  $item.setAttribute('class', 'Nav-item is-secondary');\n\t  $item.appendChild($checkbox);\n\t  $item.appendChild($label);\n\t  $item.appendChild($subList);\n\t  return $item;\n\t}\n\t\n\t/**\n\t * Checkbox for secondary item\n\t * @param  {Number} i iterator\n\t * @return {Node}   INPUT type=checkbox item\n\t */\n\tfunction createCheckbox(i) {\n\t  var stringCheckbox = '<input id=\"item-' + i + '\" type=\"checkbox\" name=\"navigation\" aria-hidden=\"true\" hidden=\"\">';\n\t  return createFromString(stringCheckbox);\n\t}\n\t\n\t/**\n\t * function for convert string to DOM element\n\t * @param  {String} elementString DOM element as string\n\t * @return {Node}\n\t */\n\tfunction createFromString(elementString) {\n\t  var $div = document.createElement('div');\n\t  $div.innerHTML = elementString;\n\t  return $div.firstChild;\n\t}\n\t\n\t/**\n\t * create anchor DOM element\n\t * @param  {Object} data item data\n\t * @return {Node}      DOM A element\n\t */\n\tfunction createLink(_ref2) {\n\t  var label = _ref2.label,\n\t      url = _ref2.url;\n\t\n\t  var $link = document.createElement('a');\n\t  $link.setAttribute('href', url);\n\t  $link.setAttribute('alt', label);\n\t  $link.textContent = label;\n\t  return $link;\n\t}\n\t\n\t/**\n\t * create label DOM element\n\t * @param  {Object} data [description]\n\t * @param  {[type]} i    [description]\n\t * @return {[type]}      [description]\n\t */\n\tfunction createLabel(data, i) {\n\t  var stringChevron = '<span class=\"Chevron\"></span>';\n\t  var $label = document.createElement('label');\n\t  $label.setAttribute('for', 'item-' + i);\n\t  var $link = document.createElement('a');\n\t  $link.innerHTML = data.label + ' ' + stringChevron;\n\t  $label.appendChild($link);\n\t  return $label;\n\t}\n\t\n\t/**\n\t * create UL sublist\n\t * @param  {Array} items sublist items\n\t * @return {Node}       DOM UL element with item list\n\t */\n\tfunction createSubList(items) {\n\t  var $subList = document.createElement('ul');\n\t  $subList.setAttribute('class', 'Nav-subList');\n\t  var $subItems = items.map(function (item) {\n\t    return createSubItem(item);\n\t  });\n\t  $subItems.forEach(function ($subItem) {\n\t    $subList.appendChild($subItem);\n\t  });\n\t  return $subList;\n\t}\n\t\n\t/**\n\t * create LI subitem\n\t * @param  {Object} data\n\t * @return {Node}      DOM LI subitem\n\t */\n\tfunction createSubItem(data) {\n\t  var $item = document.createElement('li');\n\t  $item.setAttribute('class', 'Nav-subItem');\n\t  $item.appendChild(createLink(data));\n\t  return $item;\n\t}\n\t\n\t/**\n\t * AJAX request for get data and render DOM elements\n\t */\n\tfunction render() {\n\t  var request = new Request('/api/nav.json');\n\t  fetch(request).then(function (response) {\n\t    return response.json();\n\t  }).then(function (data) {\n\t    return createList(data);\n\t  });\n\t}\n\t\n\trender();\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (typeof input === 'string') {\n\t      this.url = input\n\t    } else {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split('\\r\\n').forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// render.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4aa7bc1efd53339a93b1","import 'whatwg-fetch'\n\n/**\n * Render item list in DOM element #list\n * @param  {Object} data json data\n */\nfunction createList({ items }) {\n  const $list = document.querySelector('#list');\n  if (items) {\n    const $items = items.map((dataItem, i) => createItem(dataItem, i));\n    $items.forEach(($item) => {\n      if ($item) {\n        $list.appendChild($item)\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Create LI DOM element based in data information\n * @param  {Object} data item data\n * @param  {Number} i    iterator\n * @return {Node}      DOM li element\n */\nfunction createItem(data, i) {\n  const $item = document.createElement('li');\n  if (!(data.items && data.items.length > 0)) {\n    return getPrimaryItem($item, data);\n  }\n  return getSecondaryItem($item, data, i);\n}\n\n/**\n * Render item without subitems\n * @param  {Node} $item DOM li item without attributes\n * @param  {Object} data  item data\n * @return {Node}       DOM LI with attributes for primary navigation\n */\nfunction getPrimaryItem($item, data) {\n  $item.setAttribute('class', 'Nav-item is-primary');\n  $item.appendChild(createLink(data));\n  return $item;\n}\n\n/**\n * Render secondary item\n * @param  {Node} $item DOM li item without attributes\n * @param  {Object} data  item data\n * @param  {Number} i     iterator\n * @return {Node}       DOM LI with label, cehckbox and list\n */\nfunction getSecondaryItem($item, data, i) {\n  const $label = createLabel(data, i);\n  const $subList = createSubList(data.items);\n  const $checkbox = createCheckbox(i);\n  $item.setAttribute('class', 'Nav-item is-secondary');\n  $item.appendChild($checkbox);\n  $item.appendChild($label);\n  $item.appendChild($subList);\n  return $item;\n}\n\n/**\n * Checkbox for secondary item\n * @param  {Number} i iterator\n * @return {Node}   INPUT type=checkbox item\n */\nfunction createCheckbox(i) {\n  const stringCheckbox = '<input id=\"item-' + i + '\" type=\"checkbox\" name=\"navigation\" aria-hidden=\"true\" hidden=\"\">';\n  return createFromString(stringCheckbox);\n}\n\n/**\n * function for convert string to DOM element\n * @param  {String} elementString DOM element as string\n * @return {Node}\n */\nfunction createFromString(elementString) {\n  const $div = document.createElement('div');\n  $div.innerHTML = elementString;\n  return $div.firstChild;\n}\n\n/**\n * create anchor DOM element\n * @param  {Object} data item data\n * @return {Node}      DOM A element\n */\nfunction createLink({ label, url }) {\n  const $link = document.createElement('a');\n  $link.setAttribute('href', url);\n  $link.setAttribute('alt', label);\n  $link.textContent = label;\n  return $link;\n}\n\n/**\n * create label DOM element\n * @param  {Object} data [description]\n * @param  {[type]} i    [description]\n * @return {[type]}      [description]\n */\nfunction createLabel(data, i) {\n  const stringChevron = '<span class=\"Chevron\"></span>';\n  const $label = document.createElement('label');\n  $label.setAttribute('for', `item-${i}`);\n  const $link = document.createElement('a');\n  $link.innerHTML = `${data.label} ${stringChevron}`;\n  $label.appendChild($link);\n  return $label;\n}\n\n/**\n * create UL sublist\n * @param  {Array} items sublist items\n * @return {Node}       DOM UL element with item list\n */\nfunction createSubList(items) {\n  const $subList = document.createElement('ul')\n  $subList.setAttribute('class', 'Nav-subList');\n  const $subItems = items.map((item) => createSubItem(item));\n  $subItems.forEach(($subItem) => {\n    $subList.appendChild($subItem);\n  });\n  return $subList;\n}\n\n/**\n * create LI subitem\n * @param  {Object} data\n * @return {Node}      DOM LI subitem\n */\nfunction createSubItem(data) {\n  const $item = document.createElement('li');\n  $item.setAttribute('class', 'Nav-subItem');\n  $item.appendChild(createLink(data));\n  return $item;\n}\n\n\n/**\n * AJAX request for get data and render DOM elements\n */\nfunction render() {\n  const request = new Request('/api/nav.json');\n  fetch(request)\n    .then((response) => response.json())\n    .then((data) => createList(data));\n}\n\nrender();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/render.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 11\n// module chunks = 2"],"sourceRoot":""}